import * as c from "/custom_scripts/functions/constants.script";

async function get_server_info(serv) {
    if (serverExists(serv) == true) {
        var accServ = scan(serv, hostnames = true);
        var ram = getServerRam(serv);
        var root = hasRootAccess(serv);
        var ports = getServerNumPortsRequired(serv);
        var reqHackLvl = getServerRequiredHackingLevel(serv);
        var monAvail = getServerMoneyAvailable(serv);
        var monMax = getServerMaxMoney(serv);
        var secLvl = getServerSecurityLevel(serv);
        return [accServ,
            ram,
            root,
            ports,
            reqHackLvl,
            monAvail,
            monMax,
            secLvl];
    } else {
        print("This is not a server.");
        return 0;
    }

}

async function open_ports(serv, root) {
    var num_ports = getServerNumPortsRequired(serv);
    switch (num_ports) {
        case 0:
            if (root == false) {
                nuke(serv);
            } else {
                print("Server already has root access.");
            }
            break;
        case 1:
            brutessh(serv);
            nuke(serv);
            break;
        case 2:
            ftpcrack(serv);
            brutessh(serv);
            nuke(serv);
            break;
        case 3:
            relaysmtp(serv);
            ftpcrack(serv);
            brutessh(serv);
            nuke(serv);
            break;
        case 4:
            httpworm(serv);
            relaysmtp(serv);
            ftpcrack(serv);
            brutessh(serv);
            nuke(serv);
            break;
        case 5:
            sqlinject(serv);
            httpworm(serv);
            relaysmtp(serv);
            ftpcrack(serv);
            brutessh(serv);
            nuke(serv);
            break;
    }
    return true;
}

async function send_file(file_name, serv) {
    if (fileExists(file_name, serv) == true) {
        rm(file_name);
        await scp(file_name, serv);
    } else {
        await scp(file_name, serv);
    }
}

async function current_max_ports() {
    var maxPorts = 0;
    var exes = c.get_executables();
    for (var i = 0; i < exes.length; i++) {
        if (fileExists(exes[i], "home") == true) {
            maxPorts++;
        }
    }
    return (maxPorts - 1);
}

async function get_most_profit_server() {
    var servs = get_accessible_servers();
    var curHackLvl = getHackingLevel();
    var curMaxHack = 0;
    var curMaxMon = 0;
    var maxPorts = current_max_ports();
    var maxServ = "";
    for (var i = 0; i < servs.length; i++) {
        var servInfo = get_server_info(servs[i]);
        if ((servInfo[4] <= curHackLvl) &&
            (servInfo[4] >= curMaxHack) &&
            (servInfo[6] >= curMaxMon) &&
            (servInfo[3] <= maxPorts)) {
            maxServ = servs[i];
            curMaxHack = servInfo[4];
            curMaxMon = servInfo[6];
        }
    }
    return maxServ;
}

async function get_accessible_servers() {
    var servs = c.get_server_list();
    var maxPorts = current_max_ports();
    var accessServs = [];
    for (var i = 0; i < servs.length; i++) {
        var servInfo = get_server_info(servs[i]);
        if (maxPorts >= servInfo[3]) {
            accessServs.push(servs[i]);
        }
    }
    return accessServs;
}
